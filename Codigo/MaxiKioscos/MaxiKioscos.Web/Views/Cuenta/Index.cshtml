@using MaxiKioscos.Web.Comun.Extensiones
@using MaxiKioscos.Web.Configuration
@model MaxiKioscos.Entidades.Cuenta
@{
    ViewBag.Title = "Cuenta";
}

@Html.PaginaTitulo("Configuración")
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <a class="btn btn-default btn-configuracion-editar" href="@Url.Action("Editar", new { id = UsuarioActual.CuentaId })"><span class="glyphicon glyphicon-edit"></span>&nbsp;&nbsp;Editar</a>
            </div>
            <div class="panel-body">
                <div class="col-lg-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MargenImporteFactura)
                        @Html.DisplayFor(model => model.MargenImporteFactura)
                        @Html.ValidationMessageFor(model => model.MargenImporteFactura)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PorcentajePercepcionIVA)
                        @Html.DisplayFor(model => model.PorcentajePercepcionIVA)
                        @Html.ValidationMessageFor(model => model.PorcentajePercepcionIVA)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AplicarPercepcionIVADesde)
                        @Html.DisplayFor(model => model.AplicarPercepcionIVADesde)
                        @Html.ValidationMessageFor(model => model.AplicarPercepcionIVADesde)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SincronizarAutomaticamente)
                        @Html.DisplayFor(model => model.SincronizarAutomaticamente)
                        @Html.ValidationMessageFor(model => model.SincronizarAutomaticamente)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IntervaloSincronizacion)
                        @Html.DisplayFor(model => model.IntervaloSincronizacion)
                        @Html.ValidationMessageFor(model => model.IntervaloSincronizacion)
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group input-group-small">
                        @Html.LabelFor(model => model.MargenInferiorCierreCajaAceptable)
                        @Html.DisplayFor(model => model.MargenInferiorCierreCajaAceptable)
                        @Html.ValidationMessageFor(model => model.MargenInferiorCierreCajaAceptable)
                    </div>

                    <div class="form-group input-group-small">
                        @Html.LabelFor(model => model.MargenSuperiorCierreCajaAceptable)
                        @Html.DisplayFor(model => model.MargenSuperiorCierreCajaAceptable)
                        @Html.ValidationMessageFor(model => model.MargenSuperiorCierreCajaAceptable)
                    </div>
                    <div class="form-group input-group-small">
                        @Html.LabelFor(model => model.MaxiKioscoIdentifierPredeterminadoTransferencias)
                        @Html.DisplayFor(model => model.MaxiKioscoIdentifierPredeterminadoTransferencias)
                        @Html.ValidationMessageFor(model => model.MaxiKioscoIdentifierPredeterminadoTransferencias)
                    </div>
                    <div class="form-group input-group-small">
                        @Html.LabelFor(model => model.MotivoCorreccionPorDefecto)
                        @Html.DisplayFor(model => model.MotivoCorreccion.Descripcion)
                        @Html.ValidationMessageFor(model => model.MotivoCorreccionPorDefecto)
                    </div>
                    <div class="form-group input-group-small">
                        @Html.LabelFor(model => model.LimiteMaximoRetiroPersonal)
                        @Html.DisplayFor(model => model.LimiteMaximoRetiroPersonal)
                        @Html.ValidationMessageFor(model => model.LimiteMaximoRetiroPersonal)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Modal("ConfiguracionModal", ModalSize.Large)

@if (!IsAjax)
{
    <text>
    @section scripts
    {
        @Scripts.Render("~/Scripts/app/maxikiosco-configuracion.js")
    }
    </text>
}
else
{
    @Scripts.Render("~/Scripts/app/maxikiosco-configuracion.js")
}
