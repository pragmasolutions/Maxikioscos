//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MaxiKioscos.Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MaxiKioscosEntities : DbContext
    {
        public MaxiKioscosEntities()
            : base("name=MaxiKioscosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CierreCaja> CierreCajas { get; set; }
        public virtual DbSet<CodigoProducto> CodigoProductoes { get; set; }
        public virtual DbSet<Cuenta> Cuentas { get; set; }
        public virtual DbSet<ExcepcionRubro> ExcepcionRubroes { get; set; }
        public virtual DbSet<Factura> Facturas { get; set; }
        public virtual DbSet<Localidad> Localidads { get; set; }
        public virtual DbSet<Marca> Marcas { get; set; }
        public virtual DbSet<MaxiKiosco> MaxiKioscoes { get; set; }
        public virtual DbSet<MotivoOperacionCaja> MotivoOperacionCajas { get; set; }
        public virtual DbSet<OperacionCaja> OperacionCajas { get; set; }
        public virtual DbSet<Producto> Productoes { get; set; }
        public virtual DbSet<Proveedor> Proveedors { get; set; }
        public virtual DbSet<Provincia> Provincias { get; set; }
        public virtual DbSet<Rubro> Rubroes { get; set; }
        public virtual DbSet<TipoCuit> TipoCuits { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Venta> Ventas { get; set; }
        public virtual DbSet<VentaProducto> VentaProductoes { get; set; }
        public virtual DbSet<Role> webpages_Roles { get; set; }
        public virtual DbSet<Exportacion> Exportaciones { get; set; }
        public virtual DbSet<ExportacionArchivo> ExportacionArchivos { get; set; }
        public virtual DbSet<UsuarioProveedor> UsuariosProveedores { get; set; }
        public virtual DbSet<Stock> Stocks { get; set; }
        public virtual DbSet<Excepcion> Excepcions { get; set; }
        public virtual DbSet<Compra> Compras { get; set; }
        public virtual DbSet<CompraProducto> ComprasProductos { get; set; }
        public virtual DbSet<StockTransaccion> StockTransacciones { get; set; }
        public virtual DbSet<Turno> Turnos { get; set; }
        public virtual DbSet<CorreccionStock> CorreccionStocks { get; set; }
        public virtual DbSet<MotivoCorreccion> MotivoCorreccions { get; set; }
        public virtual DbSet<StockTransaccionTipo> StockTransaccionTipoes { get; set; }
        public virtual DbSet<MaxiKioscoTurno> MaxiKioscoTurnos { get; set; }
        public virtual DbSet<ProveedorProducto> ProveedorProductos { get; set; }
        public virtual DbSet<Importacion> Importaciones { get; set; }
        public virtual DbSet<Billete> Billetes { get; set; }
        public virtual DbSet<RecuentoBillete> RecuentoBilletes { get; set; }
        public virtual DbSet<EstadoTicket> EstadoTickets { get; set; }
        public virtual DbSet<TicketError> TicketErrors { get; set; }
        public virtual DbSet<MensajeTicketError> MensajeTicketErrors { get; set; }
        public virtual DbSet<ControlStock> ControlesStock { get; set; }
        public virtual DbSet<ControlStockDetalle> ControlStockDetalles { get; set; }
        public virtual DbSet<ConfiguracionLocal> ConfiguracionesLocales { get; set; }
        public virtual DbSet<Transferencia> Transferencias { get; set; }
        public virtual DbSet<TransferenciaProducto> TransferenciaProductos { get; set; }
        public virtual DbSet<ProductoPromocion> ProductoPromocions { get; set; }
        public virtual DbSet<CategoriaCosto> CategoriasCostos { get; set; }
        public virtual DbSet<Costo> Costos { get; set; }
        public virtual DbSet<RetiroPersonal> RetirosPersonales { get; set; }
        public virtual DbSet<RetiroPersonalProducto> RetiroPersonalProductos { get; set; }
    
        public virtual ObjectResult<Nullable<int>> UsuarioInsertarDependencias(Nullable<int> usuarioId, Nullable<int> roleId, string proveedoresIds)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var proveedoresIdsParameter = proveedoresIds != null ?
                new ObjectParameter("ProveedoresIds", proveedoresIds) :
                new ObjectParameter("ProveedoresIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UsuarioInsertarDependencias", usuarioIdParameter, roleIdParameter, proveedoresIdsParameter);
        }
    
        public virtual ObjectResult<Membresia> UsuarioObtenerMembresia(Nullable<int> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Membresia>("UsuarioObtenerMembresia", usuarioIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CierreCajaCerrar(Nullable<int> maxiKioscoId, Nullable<decimal> cajaFinal)
        {
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var cajaFinalParameter = cajaFinal.HasValue ?
                new ObjectParameter("CajaFinal", cajaFinal) :
                new ObjectParameter("CajaFinal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CierreCajaCerrar", maxiKioscoIdParameter, cajaFinalParameter);
        }
    
        public virtual ObjectResult<CierreCajaDetalleRow> CierreCajaDetalle(Nullable<int> cierreCajaId)
        {
            var cierreCajaIdParameter = cierreCajaId.HasValue ?
                new ObjectParameter("CierreCajaId", cierreCajaId) :
                new ObjectParameter("CierreCajaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CierreCajaDetalleRow>("CierreCajaDetalle", cierreCajaIdParameter);
        }
    
        public virtual ObjectResult<RptCierreDeCaja> RptCierresDeCaja(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> maxiKioscoId, Nullable<int> usuarioId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCierreDeCaja>("RptCierresDeCaja", desdeParameter, hastaParameter, maxiKioscoIdParameter, usuarioIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<RptVentaPorMaxikiosco> RptVentasPorMaxikiosco(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptVentaPorMaxikiosco>("RptVentasPorMaxikiosco", desdeParameter, hastaParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<RptVentaPorProducto> RptVentasPorProducto(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> rubroId, Nullable<int> maxikioscoId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var maxikioscoIdParameter = maxikioscoId.HasValue ?
                new ObjectParameter("MaxikioscoId", maxikioscoId) :
                new ObjectParameter("MaxikioscoId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptVentaPorProducto>("RptVentasPorProducto", desdeParameter, hastaParameter, rubroIdParameter, maxikioscoIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<RptVentaPorProductoRanking> RptVentasPorProductoRanking(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> rubroId, Nullable<int> maxikioscoId, Nullable<int> cuentaId, Nullable<int> cierreCajaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var maxikioscoIdParameter = maxikioscoId.HasValue ?
                new ObjectParameter("MaxikioscoId", maxikioscoId) :
                new ObjectParameter("MaxikioscoId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            var cierreCajaIdParameter = cierreCajaId.HasValue ?
                new ObjectParameter("CierreCajaId", cierreCajaId) :
                new ObjectParameter("CierreCajaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptVentaPorProductoRanking>("RptVentasPorProductoRanking", desdeParameter, hastaParameter, rubroIdParameter, maxikioscoIdParameter, cuentaIdParameter, cierreCajaIdParameter);
        }
    
        public virtual ObjectResult<ProductoCompleto> ProductoListadoCompleto(Nullable<int> maxiKioscoId, Nullable<int> proveedorId, Nullable<int> productoId)
        {
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(int));
    
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoCompleto>("ProductoListadoCompleto", maxiKioscoIdParameter, proveedorIdParameter, productoIdParameter);
        }
    
        public virtual ObjectResult<FacturaCompleta> FacturaObtenerAbiertasPorUsuario(Nullable<int> usuarioId, Nullable<int> maxiKioscoId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FacturaCompleta>("FacturaObtenerAbiertasPorUsuario", usuarioIdParameter, maxiKioscoIdParameter);
        }
    
        public virtual ObjectResult<RubroCompleto> RubroListadoPorKiosco(Nullable<int> maxiKioscoId)
        {
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RubroCompleto>("RubroListadoPorKiosco", maxiKioscoIdParameter);
        }
    
        public virtual ObjectResult<RptCierreDeCajaDetalle> RptCierresDeCajaDetalle(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> maxiKioscoId, Nullable<int> usuarioId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCierreDeCajaDetalle>("RptCierresDeCajaDetalle", desdeParameter, hastaParameter, maxiKioscoIdParameter, usuarioIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<RptStock> RptStock(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> maxiKioscoId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStock>("RptStock", desdeParameter, hastaParameter, maxiKioscoIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> RptStockDiferenciaCierres(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> maxiKioscoId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("RptStockDiferenciaCierres", desdeParameter, hastaParameter, maxiKioscoIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ExportacionNuevoXmlPrincipal(Nullable<int> usuarioId, Nullable<int> secuencia)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ExportacionNuevoXmlPrincipal", usuarioIdParameter, secuenciaParameter);
        }
    
        public virtual ObjectResult<ProductoHorario> ObtenerProductoPorCodigo(string codigo, Nullable<int> maxiKioscoId)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoHorario>("ObtenerProductoPorCodigo", codigoParameter, maxiKioscoIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CierreCajaCantidadDineroActual(Nullable<int> cierreCajaId)
        {
            var cierreCajaIdParameter = cierreCajaId.HasValue ?
                new ObjectParameter("CierreCajaId", cierreCajaId) :
                new ObjectParameter("CierreCajaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CierreCajaCantidadDineroActual", cierreCajaIdParameter);
        }
    
        public virtual ObjectResult<EstadoKiosco> SincronizacionEstadoKioscos(Nullable<int> cuentaId)
        {
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EstadoKiosco>("SincronizacionEstadoKioscos", cuentaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ExportacionNuevoXmlKiosco(Nullable<System.Guid> maxiKioscoIdentifier, Nullable<int> usuarioId)
        {
            var maxiKioscoIdentifierParameter = maxiKioscoIdentifier.HasValue ?
                new ObjectParameter("MaxiKioscoIdentifier", maxiKioscoIdentifier) :
                new ObjectParameter("MaxiKioscoIdentifier", typeof(System.Guid));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ExportacionNuevoXmlKiosco", maxiKioscoIdentifierParameter, usuarioIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> SincronizacionActualizarKiosco(string xML, Nullable<System.Guid> maxikioscoIdentifier, Nullable<int> secuencia)
        {
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(string));
    
            var maxikioscoIdentifierParameter = maxikioscoIdentifier.HasValue ?
                new ObjectParameter("MaxikioscoIdentifier", maxikioscoIdentifier) :
                new ObjectParameter("MaxikioscoIdentifier", typeof(System.Guid));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SincronizacionActualizarKiosco", xMLParameter, maxikioscoIdentifierParameter, secuenciaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> StockActualizar(Nullable<System.Guid> maxikioscoIdentifier, Nullable<int> productoId)
        {
            var maxikioscoIdentifierParameter = maxikioscoIdentifier.HasValue ?
                new ObjectParameter("MaxikioscoIdentifier", maxikioscoIdentifier) :
                new ObjectParameter("MaxikioscoIdentifier", typeof(System.Guid));
    
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("StockActualizar", maxikioscoIdentifierParameter, productoIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ExportacionPuedeExportarPrincipal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ExportacionPuedeExportarPrincipal");
        }
    
        public virtual ObjectResult<Nullable<int>> ExportacionPuedeExportarKiosco()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ExportacionPuedeExportarKiosco");
        }
    
        public virtual ObjectResult<Nullable<bool>> SincronizacionActualizarPrincipal(string xML, Nullable<System.Guid> maxikioscoIdentifier, Nullable<int> secuencia, string nombreArchivo)
        {
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(string));
    
            var maxikioscoIdentifierParameter = maxikioscoIdentifier.HasValue ?
                new ObjectParameter("MaxikioscoIdentifier", maxikioscoIdentifier) :
                new ObjectParameter("MaxikioscoIdentifier", typeof(System.Guid));
    
            var secuenciaParameter = secuencia.HasValue ?
                new ObjectParameter("Secuencia", secuencia) :
                new ObjectParameter("Secuencia", typeof(int));
    
            var nombreArchivoParameter = nombreArchivo != null ?
                new ObjectParameter("NombreArchivo", nombreArchivo) :
                new ObjectParameter("NombreArchivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("SincronizacionActualizarPrincipal", xMLParameter, maxikioscoIdentifierParameter, secuenciaParameter, nombreArchivoParameter);
        }
    
        public virtual int UsuarioCambiarPassword(Nullable<int> usuarioId, string password, Nullable<System.DateTime> passwordChangedDate)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordChangedDateParameter = passwordChangedDate.HasValue ?
                new ObjectParameter("PasswordChangedDate", passwordChangedDate) :
                new ObjectParameter("PasswordChangedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsuarioCambiarPassword", usuarioIdParameter, passwordParameter, passwordChangedDateParameter);
        }
    
        public virtual int ControlStockDeshabilitarAbiertos(Nullable<int> controlStockId, string stockIds)
        {
            var controlStockIdParameter = controlStockId.HasValue ?
                new ObjectParameter("ControlStockId", controlStockId) :
                new ObjectParameter("ControlStockId", typeof(int));
    
            var stockIdsParameter = stockIds != null ?
                new ObjectParameter("StockIds", stockIds) :
                new ObjectParameter("StockIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ControlStockDeshabilitarAbiertos", controlStockIdParameter, stockIdsParameter);
        }
    
        public virtual ObjectResult<RptDineroPorMaxikiosco> RptDineroPorMaxikiosco()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDineroPorMaxikiosco>("RptDineroPorMaxikiosco");
        }
    
        public virtual ObjectResult<Nullable<int>> ControlStockCrear(Nullable<int> maxiKioscoId, Nullable<int> proveedorId, Nullable<int> rubroId, Nullable<int> usuarioId, Nullable<bool> masVendidos, Nullable<int> cantidadFilas, Nullable<int> limiteInferior, Nullable<int> limiteSuperior)
        {
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(int));
    
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var masVendidosParameter = masVendidos.HasValue ?
                new ObjectParameter("MasVendidos", masVendidos) :
                new ObjectParameter("MasVendidos", typeof(bool));
    
            var cantidadFilasParameter = cantidadFilas.HasValue ?
                new ObjectParameter("CantidadFilas", cantidadFilas) :
                new ObjectParameter("CantidadFilas", typeof(int));
    
            var limiteInferiorParameter = limiteInferior.HasValue ?
                new ObjectParameter("LimiteInferior", limiteInferior) :
                new ObjectParameter("LimiteInferior", typeof(int));
    
            var limiteSuperiorParameter = limiteSuperior.HasValue ?
                new ObjectParameter("LimiteSuperior", limiteSuperior) :
                new ObjectParameter("LimiteSuperior", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ControlStockCrear", maxiKioscoIdParameter, proveedorIdParameter, rubroIdParameter, usuarioIdParameter, masVendidosParameter, cantidadFilasParameter, limiteInferiorParameter, limiteSuperiorParameter);
        }
    
        public virtual ObjectResult<ControlStockPlanillaRow> ReporteControlStockPlanilla(Nullable<int> controlStockId)
        {
            var controlStockIdParameter = controlStockId.HasValue ?
                new ObjectParameter("ControlStockId", controlStockId) :
                new ObjectParameter("ControlStockId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ControlStockPlanillaRow>("ReporteControlStockPlanilla", controlStockIdParameter);
        }
    
        public virtual ObjectResult<RptDineroSobranteFaltante> RptDineroSobranteFaltante(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> maxiKioscoId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDineroSobranteFaltante>("RptDineroSobranteFaltante", desdeParameter, hastaParameter, maxiKioscoIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<RptGanaciaAdicionalExcepcionRubro> RptGanaciaAdicionalExcepcionRubro(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> maxiKioscoId, Nullable<int> rubroId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGanaciaAdicionalExcepcionRubro>("RptGanaciaAdicionalExcepcionRubro", desdeParameter, hastaParameter, maxiKioscoIdParameter, rubroIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<ReponerStock> RptReponerStock(Nullable<int> productoId, Nullable<int> proveedorId, Nullable<int> maxiKioscoId)
        {
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(int));
    
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReponerStock>("RptReponerStock", productoIdParameter, proveedorIdParameter, maxiKioscoIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> VentaGenerarNumero(Nullable<int> maxikioscoId)
        {
            var maxikioscoIdParameter = maxikioscoId.HasValue ?
                new ObjectParameter("MaxikioscoId", maxikioscoId) :
                new ObjectParameter("MaxikioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VentaGenerarNumero", maxikioscoIdParameter);
        }
    
        public virtual ObjectResult<RptVentasPorCierreCaja> RptVentasPorCierreCaja(Nullable<int> cierreCajaId)
        {
            var cierreCajaIdParameter = cierreCajaId.HasValue ?
                new ObjectParameter("CierreCajaId", cierreCajaId) :
                new ObjectParameter("CierreCajaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptVentasPorCierreCaja>("RptVentasPorCierreCaja", cierreCajaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CierreCajaUltimaCajaFinal(Nullable<int> maxikioscoId)
        {
            var maxikioscoIdParameter = maxikioscoId.HasValue ?
                new ObjectParameter("MaxikioscoId", maxikioscoId) :
                new ObjectParameter("MaxikioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CierreCajaUltimaCajaFinal", maxikioscoIdParameter);
        }
    
        public virtual ObjectResult<CierreCaja> CierreCajaObtenerUltima(Nullable<int> maxikioscoId)
        {
            var maxikioscoIdParameter = maxikioscoId.HasValue ?
                new ObjectParameter("MaxikioscoId", maxikioscoId) :
                new ObjectParameter("MaxikioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CierreCaja>("CierreCajaObtenerUltima", maxikioscoIdParameter);
        }
    
        public virtual ObjectResult<CierreCaja> CierreCajaObtenerUltima(Nullable<int> maxikioscoId, MergeOption mergeOption)
        {
            var maxikioscoIdParameter = maxikioscoId.HasValue ?
                new ObjectParameter("MaxikioscoId", maxikioscoId) :
                new ObjectParameter("MaxikioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CierreCaja>("CierreCajaObtenerUltima", mergeOption, maxikioscoIdParameter);
        }
    
        public virtual int ExportacionResetear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExportacionResetear");
        }
    
        public virtual ObjectResult<ProductoParaTransferencia> ProductoParaTransferencia(Nullable<int> origenId, Nullable<int> destinoId, Nullable<int> productoId)
        {
            var origenIdParameter = origenId.HasValue ?
                new ObjectParameter("OrigenId", origenId) :
                new ObjectParameter("OrigenId", typeof(int));
    
            var destinoIdParameter = destinoId.HasValue ?
                new ObjectParameter("DestinoId", destinoId) :
                new ObjectParameter("DestinoId", typeof(int));
    
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoParaTransferencia>("ProductoParaTransferencia", origenIdParameter, destinoIdParameter, productoIdParameter);
        }
    
        public virtual ObjectResult<StockValorizadoDetalladoRow> RptStockValorizadoDetallado(Nullable<int> rubroId, Nullable<int> maxikioscoId)
        {
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var maxikioscoIdParameter = maxikioscoId.HasValue ?
                new ObjectParameter("MaxikioscoId", maxikioscoId) :
                new ObjectParameter("MaxikioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockValorizadoDetalladoRow>("RptStockValorizadoDetallado", rubroIdParameter, maxikioscoIdParameter);
        }
    
        public virtual ObjectResult<TransferenciaDetalleRow> TransferenciaDetalle(Nullable<int> transferenciaId)
        {
            var transferenciaIdParameter = transferenciaId.HasValue ?
                new ObjectParameter("TransferenciaId", transferenciaId) :
                new ObjectParameter("TransferenciaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransferenciaDetalleRow>("TransferenciaDetalle", transferenciaIdParameter);
        }
    
        public virtual ObjectResult<RptVentasPorProductoTotalGeneral> RptVentasPorProductoTotalGeneral(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> rubroId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptVentasPorProductoTotalGeneral>("RptVentasPorProductoTotalGeneral", desdeParameter, hastaParameter, rubroIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<RptComprasPorProveedor> RptComprasPorProveedor(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> proveedorId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptComprasPorProveedor>("RptComprasPorProveedor", desdeParameter, hastaParameter, proveedorIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<RptTransferenciaPorProducto> RptTransferenciaPorProducto(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> rubroId, Nullable<int> maxikioscoOrigenId, Nullable<int> maxikioscoDestinoId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var maxikioscoOrigenIdParameter = maxikioscoOrigenId.HasValue ?
                new ObjectParameter("MaxikioscoOrigenId", maxikioscoOrigenId) :
                new ObjectParameter("MaxikioscoOrigenId", typeof(int));
    
            var maxikioscoDestinoIdParameter = maxikioscoDestinoId.HasValue ?
                new ObjectParameter("MaxikioscoDestinoId", maxikioscoDestinoId) :
                new ObjectParameter("MaxikioscoDestinoId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptTransferenciaPorProducto>("RptTransferenciaPorProducto", desdeParameter, hastaParameter, rubroIdParameter, maxikioscoOrigenIdParameter, maxikioscoDestinoIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<RptTransferenciaPorProductoTotalGeneral> RptTransferenciaPorProductoTotalGeneral(Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta, Nullable<int> rubroId, Nullable<int> cuentaId)
        {
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(System.DateTime));
    
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptTransferenciaPorProductoTotalGeneral>("RptTransferenciaPorProductoTotalGeneral", desdeParameter, hastaParameter, rubroIdParameter, cuentaIdParameter);
        }
    
        public virtual ObjectResult<StockValorizadoRow> RptStockValorizado(Nullable<int> rubroId, Nullable<int> maxikioscoId)
        {
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var maxikioscoIdParameter = maxikioscoId.HasValue ?
                new ObjectParameter("MaxikioscoId", maxikioscoId) :
                new ObjectParameter("MaxikioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockValorizadoRow>("RptStockValorizado", rubroIdParameter, maxikioscoIdParameter);
        }
    
        public virtual ObjectResult<StockValorizadoGeneralRow> RptStockValorizadoGeneral(Nullable<int> rubroId)
        {
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockValorizadoGeneralRow>("RptStockValorizadoGeneral", rubroIdParameter);
        }
    
        public virtual ObjectResult<StockValorizadoDetalladoGeneralRow> RptStockValorizadoDetalladoGeneral(Nullable<int> rubroId)
        {
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StockValorizadoDetalladoGeneralRow>("RptStockValorizadoDetalladoGeneral", rubroIdParameter);
        }
    
        public virtual ObjectResult<RptAuditoriaProductosRow> RptAuditoriaProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptAuditoriaProductosRow>("RptAuditoriaProductos");
        }
    
        public virtual ObjectResult<Rubro> ProveedorObtenerRubros(Nullable<int> proveedorId)
        {
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rubro>("ProveedorObtenerRubros", proveedorIdParameter);
        }
    
        public virtual ObjectResult<Rubro> ProveedorObtenerRubros(Nullable<int> proveedorId, MergeOption mergeOption)
        {
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rubro>("ProveedorObtenerRubros", mergeOption, proveedorIdParameter);
        }
    
        public virtual ObjectResult<ControlStockVistaPreviaRow> ControlStockVistaPrevia(Nullable<int> maxiKioscoId, Nullable<int> proveedorId, Nullable<int> rubroId, Nullable<bool> masVendidos, Nullable<int> cantidadFilas)
        {
            var maxiKioscoIdParameter = maxiKioscoId.HasValue ?
                new ObjectParameter("MaxiKioscoId", maxiKioscoId) :
                new ObjectParameter("MaxiKioscoId", typeof(int));
    
            var proveedorIdParameter = proveedorId.HasValue ?
                new ObjectParameter("ProveedorId", proveedorId) :
                new ObjectParameter("ProveedorId", typeof(int));
    
            var rubroIdParameter = rubroId.HasValue ?
                new ObjectParameter("RubroId", rubroId) :
                new ObjectParameter("RubroId", typeof(int));
    
            var masVendidosParameter = masVendidos.HasValue ?
                new ObjectParameter("MasVendidos", masVendidos) :
                new ObjectParameter("MasVendidos", typeof(bool));
    
            var cantidadFilasParameter = cantidadFilas.HasValue ?
                new ObjectParameter("CantidadFilas", cantidadFilas) :
                new ObjectParameter("CantidadFilas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ControlStockVistaPreviaRow>("ControlStockVistaPrevia", maxiKioscoIdParameter, proveedorIdParameter, rubroIdParameter, masVendidosParameter, cantidadFilasParameter);
        }
    
        public virtual ObjectResult<ProductoStock> ProductoStock(Nullable<int> productoId)
        {
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductoStock>("ProductoStock", productoIdParameter);
        }
    
        public virtual ObjectResult<RptVentaPorTicketRow> RptVentasPorTicket(Nullable<int> cierreCajaId)
        {
            var cierreCajaIdParameter = cierreCajaId.HasValue ?
                new ObjectParameter("CierreCajaId", cierreCajaId) :
                new ObjectParameter("CierreCajaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptVentaPorTicketRow>("RptVentasPorTicket", cierreCajaIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RetiroPersonalGenerarNumero(Nullable<int> maxikioscoId)
        {
            var maxikioscoIdParameter = maxikioscoId.HasValue ?
                new ObjectParameter("MaxikioscoId", maxikioscoId) :
                new ObjectParameter("MaxikioscoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RetiroPersonalGenerarNumero", maxikioscoIdParameter);
        }
    }
}
